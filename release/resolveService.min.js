/**
 * State-based routing for AngularJS 1.x
 * @version v1.0.25
 * @link https://ui-router.github.io
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("@uirouter/core"),require("angular")):"function"==typeof define&&define.amd?define(["exports","@uirouter/core","angular"],r):r((e=e||self)["@uirouter/angularjs-resolve-service"]={},e["@uirouter/core"],e.angular)}(this,function(e,s,r){"use strict";function t(){return o}var o={resolve:function(e,o,r){void 0===o&&(o={});var n=new s.PathNode(new s.StateObject({params:{},resolvables:[]})),u=new s.PathNode(new s.StateObject({params:{},resolvables:[]})),a=new s.ResolveContext([n,u]);a.addResolvables(s.resolvablesBuilder({resolve:e}),u.state);function t(e){function r(e){return s.resolvablesBuilder({resolve:s.mapObj(e,function(e){return function(){return e}})})}function t(e,r){return e[r.token]=r.value,e}return a.addResolvables(r(e),n.state),a.addResolvables(r(o),u.state),a.resolvePath().then(function(e){return e.reduce(t,{})})}return r?r.then(t):t({})}};r.module("ui.router").factory("$resolve",t),e.resolveFactory=t,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=resolveService.min.js.map
